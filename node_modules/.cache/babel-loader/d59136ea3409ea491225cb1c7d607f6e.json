{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijonisenko/Desktop/it/myTodolists/src/todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  _s();\n  let {\n    title,\n    tasks,\n    removeTask,\n    changeFilter,\n    addTask,\n    changeTaskStatus,\n    filter\n  } = _ref;\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(null);\n  function onChangeInputHandler(e) {\n    setValue(e.currentTarget.value);\n  }\n  function onAddTaskHandler() {\n    if (value.trim() !== '') {\n      addTask(value.trim());\n      setValue('');\n    } else {\n      setError('Title is Required');\n    }\n  }\n  function onKeyPressHandler(e) {\n    setError(null);\n    if (e.key === 'Enter') {\n      addTask(value);\n      setValue('');\n    }\n  }\n  function onAllClickHandler() {\n    changeFilter('all');\n  }\n  function onActiveClickHandler() {\n    changeFilter('active');\n  }\n  function onCompletedClickHandler() {\n    changeFilter('completed');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: onChangeInputHandler,\n        onKeyPress: onKeyPressHandler,\n        className: error ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddTaskHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: error ? 'error-message' : '',\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        function removeTaskHandler() {\n          removeTask(task.id);\n        }\n        function onChangeCheckedHandler(e) {\n          changeTaskStatus(task.id, e.currentTarget.checked);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: onChangeCheckedHandler,\n              checked: task.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: removeTaskHandler,\n              children: \"\\u2716\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAllClickHandler,\n        className: filter === 'all' ? 'active-filter' : '',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onActiveClickHandler,\n        className: filter === 'active' ? 'active-filter' : '',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCompletedClickHandler,\n        className: filter === 'completed' ? 'active-filter' : '',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"2xVBvVJ4brbuuUPeIt3XLET8CmM=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","title","tasks","removeTask","changeFilter","addTask","changeTaskStatus","filter","value","setValue","error","setError","onChangeInputHandler","e","currentTarget","onAddTaskHandler","trim","onKeyPressHandler","key","onAllClickHandler","onActiveClickHandler","onCompletedClickHandler","map","task","removeTaskHandler","id","onChangeCheckedHandler","checked","isDone"],"sources":["/Users/vitalijonisenko/Desktop/it/myTodolists/src/todolist/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, FC, useState} from \"react\";\nimport {FilterValueType, TasksType} from \"../App\";\n\ntype TodolistPropsType = {\n    title: string\n    tasks: TasksType[]\n    removeTask: (id: string) => void\n    changeFilter: (value: FilterValueType) => void\n    addTask: (title: string) => void\n    changeTaskStatus: (id: string, isDone: boolean) => void\n    filter: FilterValueType\n}\n\nexport const Todolist: FC<TodolistPropsType> = ({\n                                                    title,\n                                                    tasks,\n                                                    removeTask,\n                                                    changeFilter,\n                                                    addTask,\n                                                    changeTaskStatus,\n                                                    filter\n                                                }) => {\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<null | string>(null)\n\n    function onChangeInputHandler(e: ChangeEvent<HTMLInputElement>) {\n        setValue(e.currentTarget.value)\n    }\n\n    function onAddTaskHandler() {\n\n        if (value.trim() !== '') {\n            addTask(value.trim())\n            setValue('')\n        } else {\n            setError('Title is Required')\n        }\n\n\n    }\n\n    function onKeyPressHandler(e: React.KeyboardEvent<HTMLInputElement>) {\n        setError(null)\n\n        if (e.key === 'Enter') {\n            addTask(value)\n            setValue('')\n        }\n    }\n\n    function onAllClickHandler() {\n        changeFilter('all')\n    }\n\n    function onActiveClickHandler() {\n        changeFilter('active')\n    }\n\n    function onCompletedClickHandler() {\n        changeFilter('completed')\n    }\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input value={value} onChange={onChangeInputHandler} onKeyPress={onKeyPressHandler}\n                       className={error ? 'error' : ''}/>\n                <button onClick={onAddTaskHandler}>+</button>\n                {error && <div className={error ? 'error-message' : ''}>{error}</div>}\n            </div>\n            <ul>\n\n                {tasks.map((task) => {\n                    function removeTaskHandler() {\n                        removeTask(task.id)\n                    }\n\n\n                    function onChangeCheckedHandler(e: ChangeEvent<HTMLInputElement>) {\n                        changeTaskStatus(task.id, e.currentTarget.checked)\n                    }\n\n                    return (\n\n                        <div key={task.id}>\n                            <li><input type=\"checkbox\" onChange={onChangeCheckedHandler} checked={task.isDone}/>\n                                <span>{task.title}</span>\n\n                                <button onClick={removeTaskHandler}>✖️</button>\n                            </li>\n\n                        </div>\n                    )\n                })}\n            </ul>\n            <div>\n                <button onClick={onAllClickHandler} className={filter === 'all' ? 'active-filter' : ''}>All</button>\n                <button onClick={onActiveClickHandler} className={filter === 'active' ? 'active-filter' : ''}>Active\n                </button>\n                <button onClick={onCompletedClickHandler}\n                        className={filter === 'completed' ? 'active-filter' : ''}>Completed\n                </button>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
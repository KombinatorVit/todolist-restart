{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijonisenko/Desktop/it/myTodolists/src/EditableSpan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableSpan = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const [value, setValue] = useState(title);\n  function activeEditMode() {\n    setEditMode(true);\n  }\n  function activeViewMode() {\n    setEditMode(false);\n  }\n  function onChangeHandler(e) {\n    setValue(e.currentTarget.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onBlur: activeViewMode,\n      onChange: onChangeHandler,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: activeEditMode,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n_s(EditableSpan, \"kJQHsFV4fW0zovNgGeo8YJkywQ8=\");\n_c = EditableSpan;\nexport default EditableSpan;\nvar _c;\n$RefreshReg$(_c, \"EditableSpan\");","map":{"version":3,"names":["React","useState","EditableSpan","title","editMode","setEditMode","value","setValue","activeEditMode","activeViewMode","onChangeHandler","e","currentTarget"],"sources":["/Users/vitalijonisenko/Desktop/it/myTodolists/src/EditableSpan.tsx"],"sourcesContent":["import React, {ChangeEvent, FC, useState} from \"react\";\n\ntype EditableSpanPropsType = {\n    title: string\n}\nconst EditableSpan: FC<EditableSpanPropsType> = ({title}) => {\n    const [editMode, setEditMode] = useState(false);\n    const [value, setValue] = useState(title);\n\n    function activeEditMode() {\n        setEditMode(true);\n    }\n\n    function activeViewMode() {\n        setEditMode(false);\n    }\n\n    function onChangeHandler(e: ChangeEvent<HTMLInputElement>) {\n        setValue(e.currentTarget.value);\n    }\n\n    return (\n        <>\n            {editMode ?\n                <input type=\"text\" value={value} onBlur={activeViewMode} onChange={onChangeHandler} autoFocus/>\n\n                : <span onDoubleClick={activeEditMode}>{title}</span>\n            }\n        </>\n    );\n};\n\nexport default EditableSpan;"],"mappings":";;AAAA,OAAOA,KAAK,IAAoBC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAKvD,MAAMC,YAAuC,GAAG,QAAa;EAAA;EAAA,IAAZ;IAACC;EAAK,CAAC;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACE,KAAK,CAAC;EAEzC,SAASK,cAAc,GAAG;IACtBH,WAAW,CAAC,IAAI,CAAC;EACrB;EAEA,SAASI,cAAc,GAAG;IACtBJ,WAAW,CAAC,KAAK,CAAC;EACtB;EAEA,SAASK,eAAe,CAACC,CAAgC,EAAE;IACvDJ,QAAQ,CAACI,CAAC,CAACC,aAAa,CAACN,KAAK,CAAC;EACnC;EAEA,oBACI;IAAA,UACKF,QAAQ,gBACL;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEE,KAAM;MAAC,MAAM,EAAEG,cAAe;MAAC,QAAQ,EAAEC,eAAgB;MAAC,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAE,gBAE7F;MAAM,aAAa,EAAEF,cAAe;MAAA,UAAEL;IAAK;MAAA;MAAA;MAAA;IAAA;EAAQ,iBAE1D;AAEX,CAAC;AAAC,GAzBID,YAAuC;AAAA,KAAvCA,YAAuC;AA2B7C,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
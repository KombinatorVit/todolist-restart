{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijonisenko/Desktop/it/myTodolists/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./todolist/Todolist\";\nimport { v1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks1 = [{\n  id: v1(),\n  title: \"HTML&CSS\",\n  isDone: true\n}, {\n  id: v1(),\n  title: \"JS\",\n  isDone: true\n}, {\n  id: v1(),\n  title: \"GraphQL\",\n  isDone: false\n}, {\n  id: v1(),\n  title: \"ReactJS\",\n  isDone: false\n}, {\n  id: v1(),\n  title: \"Rest API\",\n  isDone: false\n}];\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(tasks1);\n  const [filter, setFilter] = useState('all');\n  function removeTask(id) {\n    setTasks(tasks.filter(t => t.id !== id));\n  }\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => t.isDone);\n  }\n  if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => !t.isDone);\n  }\n  function changeFilter(filterValue) {\n    setFilter(filterValue);\n  }\n  function addTask(title) {\n    const newTask = {\n      id: v1(),\n      title,\n      isDone: false\n    };\n    setTasks([newTask, ...tasks]);\n  }\n  function changeTaskStatus(id, isDone) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: 'KSS',\n      tasks: filteredTasks,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"tOXuo5ESocDJoYG1fiXPG+9oLzI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","tasks1","id","title","isDone","App","tasks","setTasks","filter","setFilter","removeTask","t","filteredTasks","changeFilter","filterValue","addTask","newTask","changeTaskStatus"],"sources":["/Users/vitalijonisenko/Desktop/it/myTodolists/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./todolist/Todolist\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type TasksType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\nconst tasks1: TasksType[] = [\r\n    {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n    {id: v1(), title: \"JS\", isDone: true},\r\n    {id: v1(), title: \"GraphQL\", isDone: false},\r\n    {id: v1(), title: \"ReactJS\", isDone: false},\r\n    {id: v1(), title: \"Rest API\", isDone: false}\r\n]\r\n\r\nexport type FilterValueType = \"all\" | \"active\" | \"completed\"\r\n\r\nfunction App() {\r\n    const [tasks, setTasks] = useState<TasksType[]>(tasks1)\r\n    const [filter, setFilter] = useState<FilterValueType>('all')\r\n\r\n    function removeTask(id: string) {\r\n\r\n        setTasks(tasks.filter(t => t.id !== id))\r\n\r\n    }\r\n\r\n    let filteredTasks = tasks\r\n    if (filter === 'active') {\r\n        filteredTasks = tasks.filter(t => t.isDone)\r\n    }\r\n    if (filter === 'completed') {\r\n        filteredTasks = tasks.filter(t => !t.isDone)\r\n    }\r\n\r\n    function changeFilter(filterValue: FilterValueType) {\r\n        setFilter(filterValue)\r\n    }\r\n\r\n    function addTask(title: string){\r\nconst newTask = {id: v1(), title, isDone: false}\r\n\r\n        setTasks([newTask, ...tasks])\r\n    }\r\n\r\n    function changeTaskStatus(id:string, isDone: boolean){\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title={'KSS'} tasks={filteredTasks} removeTask={removeTask} changeFilter={changeFilter} addTask={addTask}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,qBAAqB;AAC5C,SAAQC,EAAE,QAAO,MAAM;AAAC;AAQxB,MAAMC,MAAmB,GAAG,CACxB;EAACC,EAAE,EAAEF,EAAE,EAAE;EAAEG,KAAK,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAI,CAAC,EAC3C;EAACF,EAAE,EAAEF,EAAE,EAAE;EAAEG,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAI,CAAC,EACrC;EAACF,EAAE,EAAEF,EAAE,EAAE;EAAEG,KAAK,EAAE,SAAS;EAAEC,MAAM,EAAE;AAAK,CAAC,EAC3C;EAACF,EAAE,EAAEF,EAAE,EAAE;EAAEG,KAAK,EAAE,SAAS;EAAEC,MAAM,EAAE;AAAK,CAAC,EAC3C;EAACF,EAAE,EAAEF,EAAE,EAAE;EAAEG,KAAK,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAK,CAAC,CAC/C;AAID,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAcG,MAAM,CAAC;EACvD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAkB,KAAK,CAAC;EAE5D,SAASY,UAAU,CAACR,EAAU,EAAE;IAE5BK,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACG,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKA,EAAE,CAAC,CAAC;EAE5C;EAEA,IAAIU,aAAa,GAAGN,KAAK;EACzB,IAAIE,MAAM,KAAK,QAAQ,EAAE;IACrBI,aAAa,GAAGN,KAAK,CAACE,MAAM,CAACG,CAAC,IAAIA,CAAC,CAACP,MAAM,CAAC;EAC/C;EACA,IAAII,MAAM,KAAK,WAAW,EAAE;IACxBI,aAAa,GAAGN,KAAK,CAACE,MAAM,CAACG,CAAC,IAAI,CAACA,CAAC,CAACP,MAAM,CAAC;EAChD;EAEA,SAASS,YAAY,CAACC,WAA4B,EAAE;IAChDL,SAAS,CAACK,WAAW,CAAC;EAC1B;EAEA,SAASC,OAAO,CAACZ,KAAa,EAAC;IACnC,MAAMa,OAAO,GAAG;MAACd,EAAE,EAAEF,EAAE,EAAE;MAAEG,KAAK;MAAEC,MAAM,EAAE;IAAK,CAAC;IAExCG,QAAQ,CAAC,CAACS,OAAO,EAAE,GAAGV,KAAK,CAAC,CAAC;EACjC;EAEA,SAASW,gBAAgB,CAACf,EAAS,EAAEE,MAAe,EAAC,CAErD;EAEA,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MAAC,KAAK,EAAE,KAAM;MAAC,KAAK,EAAEQ,aAAc;MAAC,UAAU,EAAEF,UAAW;MAAC,YAAY,EAAEG,YAAa;MAAC,OAAO,EAAEE;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAEnH;AAEd;AAAC,GAtCQV,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
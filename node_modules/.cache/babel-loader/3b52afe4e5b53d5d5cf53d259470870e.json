{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijonisenko/Desktop/it/myTodolists/src/todolist/Todolist.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    title,\n    tasks\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        debugger;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","title","tasks","map","task","isDone","id"],"sources":["/Users/vitalijonisenko/Desktop/it/myTodolists/src/todolist/Todolist.tsx"],"sourcesContent":["import React, {FC} from \"react\";\nimport {TasksType} from \"../App\";\n\ntype TodolistPropsType = {\n    title: string\n    tasks: TasksType[]\n}\n\nexport const Todolist: FC<TodolistPropsType> = ({title, tasks}) => {\n\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input/>\n                <button>+</button>\n            </div>\n            <ul>\n\n                {tasks.map((task) => {\n                    debugger\n                    return (\n\n                        <div key={task.id}>\n                            <li><input type=\"checkbox\" checked={task.isDone}/> <span>{task.title}</span></li>\n\n                        </div>\n                    )\n                })}\n            </ul>\n            <div>\n                <button>All</button>\n                <button>Active</button>\n                <button>Completed</button>\n            </div>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAY,OAAO;AAAC;AAQhC,OAAO,MAAMC,QAA+B,GAAG,QAAoB;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAK,CAAC;EAG1D,oBACI;IAAA,wBACI;MAAA,UAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAA,UAEKC,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;QACjB;QACA,oBAEI;UAAA,uBACI;YAAA,wBAAI;cAAO,IAAI,EAAC,UAAU;cAAC,OAAO,EAAEA,IAAI,CAACC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAE,oBAAC;cAAA,UAAOD,IAAI,CAACH;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA;QAAK,GAD3EG,IAAI,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAGX;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KA9BYN,QAA+B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijonisenko/Desktop/it/myTodolists/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./todolist/Todolist\";\nimport { v1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks1 = [{\n  id: v1(),\n  title: \"HTML&CSS\",\n  isDone: true\n}, {\n  id: v1(),\n  title: \"JS\",\n  isDone: true\n}, {\n  id: v1(),\n  title: \"GraphQL\",\n  isDone: false\n}, {\n  id: v1(),\n  title: \"ReactJS\",\n  isDone: false\n}, {\n  id: v1(),\n  title: \"Rest API\",\n  isDone: false\n}];\nfunction App() {\n  _s();\n  let [todolists, setTodolists] = useState([{\n    id: v1(),\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: v1(),\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n\n  // const [tasks, setTasks] = useState<TasksType[]>(tasks1)\n\n  function removeTask(id) {\n    setTasks(tasks.filter(t => t.id !== id));\n  }\n  function changeFilter(filterValue, todoId) {\n    setTodolists(todolists.map(t => t.id === todoId ? {\n      ...t,\n      filter: filterValue\n    } : t));\n  }\n  function addTask(title) {\n    const newTask = {\n      id: v1(),\n      title,\n      isDone: false\n    };\n    setTasks([newTask, ...tasks]);\n  }\n  function changeTaskStatus(id, isDone) {\n    setTasks(tasks.map(t => t.id === id ? {\n      ...t,\n      isDone: isDone\n    } : t));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(todo => {\n      let filteredTasks = tasks;\n      if (todo.filter === 'active') {\n        filteredTasks = tasks.filter(task => task.isDone);\n      }\n      if (todo.filter === 'completed') {\n        filteredTasks = tasks.filter(t => !t.isDone);\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        todoId: todo.id,\n        title: todo.title,\n        tasks: filteredTasks,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeTaskStatus,\n        filter: todo.filter\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Bljm+JCz1jhuCSguqfpiBvtzIso=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","tasks1","id","title","isDone","App","todolists","setTodolists","filter","removeTask","setTasks","tasks","t","changeFilter","filterValue","todoId","map","addTask","newTask","changeTaskStatus","todo","filteredTasks","task"],"sources":["/Users/vitalijonisenko/Desktop/it/myTodolists/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./todolist/Todolist\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type TasksType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\nconst tasks1: TasksType[] = [\r\n    {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n    {id: v1(), title: \"JS\", isDone: true},\r\n    {id: v1(), title: \"GraphQL\", isDone: false},\r\n    {id: v1(), title: \"ReactJS\", isDone: false},\r\n    {id: v1(), title: \"Rest API\", isDone: false}\r\n]\r\n\r\nexport type TodolistsType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValueType\r\n}\r\n\r\nexport type FilterValueType = \"all\" | \"active\" | \"completed\"\r\n\r\nfunction App() {\r\n    let [todolists, setTodolists] = useState<Array<TodolistsType>>(\r\n        [\r\n            {id: v1(), title: 'What to learn', filter: 'all'},\r\n            {id: v1(), title: 'What to buy', filter: 'all'},\r\n        ]\r\n    )\r\n\r\n\r\n    // const [tasks, setTasks] = useState<TasksType[]>(tasks1)\r\n\r\n    function removeTask(id: string) {\r\n\r\n        setTasks(tasks.filter(t => t.id !== id))\r\n\r\n    }\r\n\r\n\r\n    function changeFilter(filterValue: FilterValueType, todoId: string) {\r\n        setTodolists(todolists.map(t => t.id === todoId ? {...t, filter: filterValue} : t))\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        const newTask = {id: v1(), title, isDone: false}\r\n\r\n        setTasks([newTask, ...tasks])\r\n    }\r\n\r\n    function changeTaskStatus(id: string, isDone: boolean) {\r\n        setTasks(tasks.map(t => t.id === id ? {...t, isDone: isDone} : t)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n\r\n            {\r\n                todolists.map(todo => {\r\n\r\n                    let filteredTasks = tasks\r\n                    if (todo.filter === 'active') {\r\n                        filteredTasks = tasks.filter(task => task.isDone)\r\n                    }\r\n                    if (todo.filter === 'completed') {\r\n                        filteredTasks = tasks.filter(t => !t.isDone)\r\n                    }\r\n\r\n                    return (\r\n                        <Todolist key={todo.id} todoId={todo.id} title={todo.title} tasks={filteredTasks}\r\n                                  removeTask={removeTask} changeFilter={changeFilter}\r\n                                  addTask={addTask} changeTaskStatus={changeTaskStatus} filter={todo.filter}/>\r\n                    )\r\n\r\n                })\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
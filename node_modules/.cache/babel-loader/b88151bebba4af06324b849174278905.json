{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijonisenko/Desktop/it/myTodolists/src/todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  _s();\n  let {\n    title,\n    tasks,\n    removeTask,\n    changeFilter,\n    addTask,\n    changeTaskStatus\n  } = _ref;\n  const [value, setValue] = useState('');\n  function onChangeInputHandler(e) {\n    setValue(e.currentTarget.value);\n  }\n  function onAddTaskHandler() {\n    addTask(value);\n    setValue('');\n  }\n  function onKeyPressHandler(e) {\n    if (e.key === 'Enter') {\n      addTask(value);\n      setValue('');\n    }\n  }\n  function onAllClickHandler() {\n    changeFilter('all');\n  }\n  function onActiveClickHandler() {\n    changeFilter('active');\n  }\n  function onCompletedClickHandler() {\n    changeFilter('completed');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: onChangeInputHandler,\n        onKeyPress: onKeyPressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddTaskHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        function removeTaskHandler() {\n          removeTask(task.id);\n        }\n        function onChangeCheckedHandler(e) {\n          changeTaskStatus(task.id, e.currentTarget.checked);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: onChangeCheckedHandler,\n              checked: task.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: removeTaskHandler,\n              children: \"\\u2716\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAllClickHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onActiveClickHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCompletedClickHandler,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","title","tasks","removeTask","changeFilter","addTask","changeTaskStatus","value","setValue","onChangeInputHandler","e","currentTarget","onAddTaskHandler","onKeyPressHandler","key","onAllClickHandler","onActiveClickHandler","onCompletedClickHandler","map","task","removeTaskHandler","id","onChangeCheckedHandler","checked","isDone"],"sources":["/Users/vitalijonisenko/Desktop/it/myTodolists/src/todolist/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, FC, useState} from \"react\";\nimport {FilterValueType, TasksType} from \"../App\";\n\ntype TodolistPropsType = {\n    title: string\n    tasks: TasksType[]\n    removeTask: (id: string) => void\n    changeFilter: (value: FilterValueType) => void\n    addTask: (title: string) => void\n    changeTaskStatus: (id: string, isDone: boolean) => void\n}\n\nexport const Todolist: FC<TodolistPropsType> = ({\n                                                    title,\n                                                    tasks,\n                                                    removeTask,\n                                                    changeFilter,\n                                                    addTask,\n                                                    changeTaskStatus\n                                                }) => {\n    const [value, setValue] = useState('')\n\n    function onChangeInputHandler(e: ChangeEvent<HTMLInputElement>) {\n        setValue(e.currentTarget.value)\n    }\n\n    function onAddTaskHandler() {\n        addTask(value)\n        setValue('')\n    }\n\n    function onKeyPressHandler(e: React.KeyboardEvent<HTMLInputElement>) {\n        if (e.key === 'Enter') {\n            addTask(value)\n            setValue('')\n        }\n    }\n\n    function onAllClickHandler() {\n        changeFilter('all')\n    }\n\n    function onActiveClickHandler() {\n        changeFilter('active')\n    }\n\n    function onCompletedClickHandler() {\n        changeFilter('completed')\n    }\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <div>\n                <input value={value} onChange={onChangeInputHandler} onKeyPress={onKeyPressHandler}/>\n                <button onClick={onAddTaskHandler}>+</button>\n            </div>\n            <ul>\n\n                {tasks.map((task) => {\n                    function removeTaskHandler() {\n                        removeTask(task.id)\n                    }\n\n\n                    function onChangeCheckedHandler(e: ChangeEvent<HTMLInputElement>) {\n                        changeTaskStatus(task.id, e.currentTarget.checked)\n                    }\n\n                    return (\n\n                        <div key={task.id}>\n                            <li><input type=\"checkbox\" onChange={onChangeCheckedHandler} checked={task.isDone}/>\n                                <span>{task.title}</span>\n\n                                <button onClick={removeTaskHandler}>✖️</button>\n                            </li>\n\n                        </div>\n                    )\n                })}\n            </ul>\n            <div>\n                <button onClick={onAllClickHandler}>All</button>\n                <button onClick={onActiveClickHandler}>Active</button>\n                <button onClick={onCompletedClickHandler}>Completed</button>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAoBC,QAAQ,QAAO,OAAO;AAAC;AAYvD,OAAO,MAAMC,QAA+B,GAAG,QAOO;EAAA;EAAA,IAPN;IACIC,KAAK;IACLC,KAAK;IACLC,UAAU;IACVC,YAAY;IACZC,OAAO;IACPC;EACJ,CAAC;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASU,oBAAoB,CAACC,CAAgC,EAAE;IAC5DF,QAAQ,CAACE,CAAC,CAACC,aAAa,CAACJ,KAAK,CAAC;EACnC;EAEA,SAASK,gBAAgB,GAAG;IACxBP,OAAO,CAACE,KAAK,CAAC;IACdC,QAAQ,CAAC,EAAE,CAAC;EAChB;EAEA,SAASK,iBAAiB,CAACH,CAAwC,EAAE;IACjE,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACnBT,OAAO,CAACE,KAAK,CAAC;MACdC,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ;EAEA,SAASO,iBAAiB,GAAG;IACzBX,YAAY,CAAC,KAAK,CAAC;EACvB;EAEA,SAASY,oBAAoB,GAAG;IAC5BZ,YAAY,CAAC,QAAQ,CAAC;EAC1B;EAEA,SAASa,uBAAuB,GAAG;IAC/Bb,YAAY,CAAC,WAAW,CAAC;EAC7B;EAEA,oBACI;IAAA,wBACI;MAAA,UAAKH;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA,wBACI;QAAO,KAAK,EAAEM,KAAM;QAAC,QAAQ,EAAEE,oBAAqB;QAAC,UAAU,EAAEI;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAE,eACrF;QAAQ,OAAO,EAAED,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACN;MAAA,UAEKV,KAAK,CAACgB,GAAG,CAAEC,IAAI,IAAK;QACjB,SAASC,iBAAiB,GAAG;UACzBjB,UAAU,CAACgB,IAAI,CAACE,EAAE,CAAC;QACvB;QAGA,SAASC,sBAAsB,CAACZ,CAAgC,EAAE;UAC9DJ,gBAAgB,CAACa,IAAI,CAACE,EAAE,EAAEX,CAAC,CAACC,aAAa,CAACY,OAAO,CAAC;QACtD;QAEA,oBAEI;UAAA,uBACI;YAAA,wBAAI;cAAO,IAAI,EAAC,UAAU;cAAC,QAAQ,EAAED,sBAAuB;cAAC,OAAO,EAAEH,IAAI,CAACK;YAAO;cAAA;cAAA;cAAA;YAAA,QAAE,eAChF;cAAA,UAAOL,IAAI,CAAClB;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eAEzB;cAAQ,OAAO,EAAEmB,iBAAkB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAY;UAAA;YAAA;YAAA;YAAA;UAAA;QAC9C,GALCD,IAAI,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAOX;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAA,wBACI;QAAQ,OAAO,EAAEN,iBAAkB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAChD;QAAQ,OAAO,EAAEC,oBAAqB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACtD;QAAQ,OAAO,EAAEC,uBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA7EYjB,QAA+B;AAAA,KAA/BA,QAA+B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}